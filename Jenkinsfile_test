pipeline {
   agent any

   //tool {
     //maven 'apache-maven-3.6.3'
   //}

   environment {
     //def dockerImage
    // ip address of the docker private repository(nexus)
    
    def dockerRepoUrl = "localhost:5000"
    def dockerImageName = "hello-world-java"
    def dockerImageTag = "${dockerRepoUrl}/${dockerImageName}:${env.BUILD_NUMBER}"
    

   }
   stages {
      stage('clone repo') {
         steps {
            git 'https://github.com/dilligence1991/docker-hello-world-spring-boot.git'
         }
      }
      stage('build archive') {
         steps {
            sh "/var/jenkins_home/maven/apache-maven-3.6.3/bin/mvn -Dmaven.test.failure.ignore clean package"
         }    
      }
      stage('Publish tests Result'){
         steps {
          parallel(
               publishJunitTestsResultsToJenkins: {
                  echo "Publish junit Tests Results"
		            junit '**/target/surefire-reports/TEST-*.xml'
		             archive 'target/*.jar'
               },
               publishJunitTestsResultsToSonar: {
                   echo "This is branch b"
               })
         }
      }
      stage('Build and Push Docker Image') {
         steps {
            sh "whoami"
            sh "ls -all /var/run/docker.sock"
	    sh "pwd"
            //sh "mkdir data"
            //sh "cp ./target/hello*.jar ./data" 
            
            //dir('target'){
               //dockerImage = docker.build("hello-world-java")
            sh "docker build -t ${dockerImageName} ."
            sh "docker tag ${dockerImageName}:${dockerImageTag}"
            sh "docker push ${dockerImageTag}"
            //}
            
         }    
      }
   }
}
